/*
 Este programa esta diseñado para ordenar un arreglo con los diferentes métodos de ordenación
 Seleccionas el método con el cual quieres ordenar tu arreglo de números enteros
 Para ingresar un número entero debes dar click al campo de texto que se encuentra debajo de la etiqueta:
 "Introduzca un número entero al arreglo"
 Luego podras dar en el botón "ingresar" o presionar la tecla ENTER para poder ingresar el número escrito
 Ya que tengas tu arreglo deberás dar click en el botón "ordenar" para que tu arreglo salga ordenado en el último campo de texto.

 El tiempo que tarda en realizar un metodo se mide en nanosegundos
 Un nanosegundo es la milmillonésima parte de un segundo, (10-9 s)
 */
package metodos;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Julio
 */
public class Inicio extends javax.swing.JFrame {
    // Creamos un arrayList para añadir los elementos
    ArrayList<Integer> arreglo = new ArrayList();
    // Guardamos la opción elegida en esta variable
    String opcion = null;
    
    
    
    /**
     * Creates new form Inicio
     */
    
    public Inicio() {
        initComponents();
        setLocationRelativeTo(null);
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButtonLimpiar = new javax.swing.JButton();
        jLabelTiempo = new javax.swing.JLabel();
        jTextFieldArregloOrdenado = new javax.swing.JTextField();
        jLabelArregloOrdenado = new javax.swing.JLabel();
        jButtonOrdenar = new javax.swing.JButton();
        jTextFieldArreglo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldIntroducir = new javax.swing.JTextField();
        jButtonIngresar = new javax.swing.JButton();
        jLabelintroducir = new javax.swing.JLabel();
        jRadioButtonInsercion = new javax.swing.JRadioButton();
        jRadioButtonSeleccion = new javax.swing.JRadioButton();
        jRadioButtonBurbuja = new javax.swing.JRadioButton();
        jLabelEscoger = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Métodos de ordenamiento | Julio Sanchez");

        jButtonLimpiar.setBackground(new java.awt.Color(255, 0, 0));
        jButtonLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jLabelTiempo.setText("Tiempo en nanosegundos");

        jTextFieldArregloOrdenado.setEditable(false);

        jLabelArregloOrdenado.setText("Arreglo ordenado:");

        jButtonOrdenar.setText("ordenar");
        jButtonOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarActionPerformed(evt);
            }
        });

        jTextFieldArreglo.setEditable(false);

        jLabel1.setText("Arreglo:");

        jTextFieldIntroducir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldIntroducirKeyPressed(evt);
            }
        });

        jButtonIngresar.setText("ingresar");
        jButtonIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIngresarActionPerformed(evt);
            }
        });

        jLabelintroducir.setText("introduzca un número entero al arreglo:");

        buttonGroup1.add(jRadioButtonInsercion);
        jRadioButtonInsercion.setText("Inserción");
        jRadioButtonInsercion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonInsercionActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonSeleccion);
        jRadioButtonSeleccion.setText("Selección");
        jRadioButtonSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSeleccionActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonBurbuja);
        jRadioButtonBurbuja.setText("Burbuja");
        jRadioButtonBurbuja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonBurbujaActionPerformed(evt);
            }
        });

        jLabelEscoger.setText("Escoge un método para ordenar tu arreglo: ");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1)
                    .addComponent(jLabelEscoger)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jRadioButtonBurbuja)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonSeleccion)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonInsercion))
                    .addComponent(jTextFieldArregloOrdenado, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonLimpiar))
                    .addComponent(jLabelTiempo)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelintroducir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabelArregloOrdenado)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jTextFieldIntroducir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonIngresar)
                                        .addGap(18, 18, 18)))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextFieldArreglo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jButtonOrdenar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelEscoger)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonBurbuja)
                    .addComponent(jRadioButtonSeleccion)
                    .addComponent(jRadioButtonInsercion))
                .addGap(18, 18, 18)
                .addComponent(jLabelintroducir)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonIngresar)
                    .addComponent(jTextFieldIntroducir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldArreglo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOrdenar))
                .addGap(18, 18, 18)
                .addComponent(jLabelArregloOrdenado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldArregloOrdenado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLimpiar)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonBurbujaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBurbujaActionPerformed
        // Guardar la opción que este seleccionada en el jRadioButton
        if (jRadioButtonBurbuja.isSelected()) {
            opcion = "burbuja";
        }
    }//GEN-LAST:event_jRadioButtonBurbujaActionPerformed

    private void jRadioButtonSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSeleccionActionPerformed
        // Guardar la opción que este seleccionada en el jRadioButton
        if (jRadioButtonSeleccion.isSelected()) {
            opcion = "seleccion";
        }
    }//GEN-LAST:event_jRadioButtonSeleccionActionPerformed

    private void jRadioButtonInsercionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonInsercionActionPerformed
        // Guardar la opción que este seleccionada en el jRadioButton
        if (jRadioButtonInsercion.isSelected()) {
            opcion = "insercion";
        }
    }//GEN-LAST:event_jRadioButtonInsercionActionPerformed

    private void jButtonIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIngresarActionPerformed
        try{
            // convertir el elemento ingresado a un entero y guardarlo en la variable numero
            // numero agregarlo en un ArrayList llamada arreglo

            int numero = Integer.parseInt(jTextFieldIntroducir.getText());
            arreglo.add(numero);

            // convertir el arreglo en texto para mostrarlo en jTextFieldArreglo
            String mostrarArreglo = arreglo.toString();
            // mostrarlo en el jTextFieldArreglo
            jTextFieldArreglo.setText(mostrarArreglo);

            // reiniciar el campo de texto introducir
            jTextFieldIntroducir.setText(null);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Ingresa un número entero\n" + e, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIngresarActionPerformed

    private void jTextFieldIntroducirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldIntroducirKeyPressed
        // presionar la tecla enter para agregar los elementos del jtextfieldIngresar
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonIngresar.doClick();
        }
    }//GEN-LAST:event_jTextFieldIntroducirKeyPressed

    private void jButtonOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarActionPerformed
        // TODO add your handling code here:
        // Creamos un arreglo de tipo entero para pasarle como parametro al metodo burbuja
        int[] miArreglo = new int[arreglo.size()];

        // usamos un for para agregar cada elemento del arraylist al arreglo
        for (int i = 0; i < arreglo.size(); i++) {
            miArreglo[i] = arreglo.get(i);
        }

        // si no se ha seleccionado un metodo manda un mensaje
        try{
            if (opcion == null) {
                JOptionPane.showMessageDialog(null, "Selecciona un método", "Error", JOptionPane.ERROR_MESSAGE);
            } else if(jTextFieldArreglo.getText() == null){
                JOptionPane.showMessageDialog(null, "Ingresa un arreglo", "Error", JOptionPane.ERROR_MESSAGE);
            }else {
                // Ordenamos por el metodo seleccionado

                switch (opcion) {
                    case "burbuja":
                    // Iniciamos el cronómetro
                    long inicioBurbuja = System.nanoTime();
                    // le pasamos como parametro nuestro arreglo a la clase Burbuja
                    Burbuja.burbuja(miArreglo);
                    // finalizamos el cronómetro
                    long finBurbuja = System.nanoTime();

                    double tiempoBurbuja = (finBurbuja - inicioBurbuja);
                    System.out.println((tiempoBurbuja + " nanosegundos con el método Burbuja"));

                    // Ver en en el jTextField el tiempo de ejecucion y darle un salto de linea
                    String tiempo1 = (tiempoBurbuja + " nanosegundos con el método Burbuja");
                    jTextArea1.setText(jTextArea1.getText() + tiempo1 + "\n");

                    // Limpiamos los elementos que tenia el arreglo para ingresar los elementos ya ordenados
                    arreglo.clear();
                    for (int i = 0; i < miArreglo.length; i++) {
                        arreglo.add(miArreglo[i]);
                    }
                    // lo mostramos en el jtextfield ArregloOrdenado
                    jTextFieldArregloOrdenado.setText(arreglo.toString());
                    break;

                    case "seleccion":
                    long inicioSeleccion = System.nanoTime();
                    // le pasamos como parametro nuestro arreglo a la clase Seleccion
                    Seleccion.seleccion(miArreglo);
                    long finSeleccion = System.nanoTime();
                    double tiempoSeleccion = (finSeleccion - inicioSeleccion);
                    System.out.println(tiempoSeleccion + " nanosegundos con el método Selección");

                    // Ver en en el jLabelTiempo el tiempo de ejecucion
                    String tiempo2 = (tiempoSeleccion + " nanosegundos con el método selección");
                    jTextArea1.setText(jTextArea1.getText() + tiempo2 + "\n");

                    // Limpiamos los elementos que tenia el arreglo para ingresar los elementos ya ordenados
                    arreglo.clear();
                    for (int i = 0; i < miArreglo.length; i++) {
                        arreglo.add(miArreglo[i]);
                    }
                    // lo mostramos en el jtextfield ArregloOrdenado
                    jTextFieldArregloOrdenado.setText(arreglo.toString());
                    break;

                    case "insercion":
                    long inicioInsercion = System.nanoTime();
                    // le pasamos como parametro nuestro arreglo a la clase Insercion
                    Insercion.insercion(miArreglo);
                    long finInsercion = System.nanoTime();
                    double tiempoInsercion = (finInsercion - inicioInsercion);
                    System.out.println(tiempoInsercion + " nanosegundos con el método Inserción");

                    // Ver en en el jLabelTiempo el tiempo de ejecucion
                    String tiempo3 = (tiempoInsercion + " nanosegundos con el método inserción");
                    jTextArea1.setText(jTextArea1.getText() + tiempo3 + "\n");

                    // Limpiamos los elementos que tenia el arreglo para ingresar los elementos ya ordenados
                    arreglo.clear();
                    for (int i = 0; i < miArreglo.length; i++) {
                        arreglo.add(miArreglo[i]);
                    }
                    // lo mostramos en el jtextfield ArregloOrdenado
                    jTextFieldArregloOrdenado.setText(arreglo.toString());
                    break;

                    default:
                    JOptionPane.showMessageDialog(null, "Selecciona un método");
                    break;
                }
            }
        }catch(NullPointerException ex){
            System.out.println("Error: " + ex);
        }
    }//GEN-LAST:event_jButtonOrdenarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        // limpiar el arreglo y reiniciar los campos del arreglo y del arreglo ordenado
        arreglo.clear();
        jTextFieldArreglo.setText(null);
        jTextFieldArregloOrdenado.setText(null);
        jTextArea1.setText(null);

    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonIngresar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonOrdenar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelArregloOrdenado;
    private javax.swing.JLabel jLabelEscoger;
    private javax.swing.JLabel jLabelTiempo;
    private javax.swing.JLabel jLabelintroducir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonBurbuja;
    private javax.swing.JRadioButton jRadioButtonInsercion;
    private javax.swing.JRadioButton jRadioButtonSeleccion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldArreglo;
    private javax.swing.JTextField jTextFieldArregloOrdenado;
    private javax.swing.JTextField jTextFieldIntroducir;
    // End of variables declaration//GEN-END:variables
}
